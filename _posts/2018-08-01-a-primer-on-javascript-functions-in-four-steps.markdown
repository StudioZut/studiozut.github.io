---
layout: post
title:  "A Primer on JavaScript Functions in Four Steps"
date:   2018-08-01 11:58:21 -0400
categories: jekyll update
---

 <h1>A Primer on Javascript Functions in Four Steps</h1>
  <p><a href="https://codepen.io/studiozut/pen/mjpKLZ">Check out the code in Codepen</a></p>
  <p>We'll start with a simple function that inserts some text into the page. The function looks like this:</p>

```
function basicFunction() {
  // set the text
  var theVar = "text generated by js";
  // output the text we just defined to the page by replacing the html content of the element with the ID "basicVar"
  document.getElementById("basicVar").innerHTML = theVar;
}
```

  <p>This works by finding the html element with the ID "basicVar" and replacing the innerHTML with the text from the function. We're hardcoding the text ("text generated by js") in the function itself. We could even skip the first line and write the function like this:</p>

```
function basicFunction() {
  document.getElementById("basicVar").innerHTML = "text generated by js";
}

```
  <p>The only reason I defined the text as a variable ("theVar") was to get us thinking in terms of variables.</p>

  <h2>Passing a Value to the Function</h2>	  
  <p>And now the same idea, but we're passing a value to the function. To do this, when we call the function we pass the value to it like this: lessBasicFunction('text from a variable'):</p>

```
function lessBasicFunction(theValue) {
  // no need to define the theValue, it's being passed from where the function is called, all we need to do is output it to the page
  document.getElementById("lessBasicVar").innerHTML = theValue;
}
```
  <p>So far so good, but the value "text from a variable" had to be hardcoded into the page when we called the function. That's not very helpful in this case and we might as well have written it like the basicFunction above. But we passed it a value as a variable, and that's a start. Let's expand on this idea and create a function that takes two values and outputs them as a total. We'll even put a function inside a function for fun using evenLessBasicFunction and output it to the page here: "<span id="evenLessBasicVar">this is the value we're replacing with evenLessBasicFunction</span>"</p> 
  <p>Let's add a form so the user can enter something and we can then use that to pass it to the function.</p>
  <input id="formValue" class="the-class" placeholder="type something here">
  <button id="submitButton">enter</button>
  <p>So now, thanks to the advancedFunction function (and a "listener"), whatever you put in that field should appear here: "<span id="advancedVar">this is the value we're replacing with advancedFunction</span>".</p>
  <p>Now we have four functions:</p>
  <ol>
    <li>The first function (basicFunction) adds some text to the page</li>
    <li>The second function (lessBasicFunction) also adds text but we get to pass it as a variable</li>
    <li>The third function (evenLessBasicFunction) passes two values and adds them together in a nested function</li>
    <li>The fourth function (advancedFunction) lets us define the value on the page itself</li>
  </ol>
<p>This is all using simple javascript. It's meant to illustrate the logic behind functions and how to pass values to them using variables. There are quicker and better ways to do most of this, like using jquery :). 
